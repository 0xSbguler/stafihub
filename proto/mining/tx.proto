syntax = "proto3";
package stafihub.stafihub.mining;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/stafihub/stafihub/x/mining/types";

// Msg defines the Msg service.
service Msg {
  rpc AddStakePool(MsgAddStakePool) returns (MsgAddStakePoolResponse);
  rpc AddStakeItem(MsgAddStakeItem) returns (MsgAddStakeItemResponse);
  rpc AddRewardPool(MsgAddRewardPool) returns (MsgAddRewardPoolResponse);
  rpc Stake(MsgStake) returns (MsgStakeResponse);
  rpc ClaimReward(MsgClaimReward) returns (MsgClaimRewardResponse);
  rpc Withdraw(MsgWithdraw) returns (MsgWithdrawResponse);
  rpc ProvideRewardToken(MsgProvideRewardToken) returns (MsgProvideRewardTokenResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgAddStakePool {
  string creator = 1;
  string stakeTokenDenom = 2;
  uint32 maxRewardPools = 3;
}

message MsgAddStakePoolResponse {
}

message MsgAddStakeItem {
  string creator = 1;
  uint32 index = 2;
  uint64 lockSecond = 3;
  string powerRewardRate = 4 [(gogoproto.customtype) = "github.com/stafihub/stafihub/utils.Dec", (gogoproto.nullable) = false];
  bool enable = 5;
}

message MsgAddStakeItemResponse {
}

message MsgAddRewardPool {
  string creator = 1;
  string stakeTokenDenom = 2;
  string rewardTokenDenom = 3;
  string totalRewardAmount = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string rewardPerSecond = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  uint64 startTimestamp = 6;
}

message MsgAddRewardPoolResponse {
}

message MsgStake {
  string creator = 1;
  cosmos.base.v1beta1.Coin stakeToken = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
  uint32 stakeItemIndex = 3;
}

message MsgStakeResponse {
}

message MsgClaimReward {
  string creator = 1;
  string stakeTokenDenom = 2;
  uint32 stakeRecordIndex = 3;
}

message MsgClaimRewardResponse {
}

message MsgWithdraw {
  string creator = 1;
  cosmos.base.v1beta1.Coin stakeToken = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
  uint32 stakeRecordIndex = 3;
}

message MsgWithdrawResponse {
}

message MsgProvideRewardToken {
  string creator = 1;
  cosmos.base.v1beta1.Coin token = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
}

message MsgProvideRewardTokenResponse {
}

// this line is used by starport scaffolding # proto/tx/message