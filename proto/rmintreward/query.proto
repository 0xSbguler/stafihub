syntax = "proto3";
package stafihub.stafihub.rmintreward;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "rmintreward/params.proto";
import "rmintreward/models.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/stafihub/stafihub/x/rmintreward/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/stafihub/stafihub/rmintreward/params";
  }
  // Queries a list of ActLatestCycle items.
	rpc ActLatestCycle(QueryActLatestCycleRequest) returns (QueryActLatestCycleResponse) {
		option (google.api.http).get = "/stafihub/stafihub/rmintreward/act_latest_cycle/{denom}";
	}

// Queries a list of ActDetail items.
	rpc ActDetail(QueryActDetailRequest) returns (QueryActDetailResponse) {
		option (google.api.http).get = "/stafihub/stafihub/rmintreward/act_detail/{denom}/{cycle}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryActLatestCycleRequest {
  string denom = 1;
}

message QueryActLatestCycleResponse {
  uint64 latestCycle = 1;
}

message QueryActDetailRequest {
  string denom = 1;
  uint64 cycle = 2;
}

message QueryActDetailResponse {
  MintRewardAct act = 4;
}

// this line is used by starport scaffolding # 3
