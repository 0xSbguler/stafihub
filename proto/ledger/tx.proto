syntax = "proto3";
package stafihub.stafihub.ledger;

import "gogoproto/gogo.proto";
import "ledger/ledger.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/stafihub/stafihub/x/ledger/types";

// Msg defines the Msg service.
service Msg {
  rpc SetEraUnbondLimit(MsgSetEraUnbondLimit) returns (MsgSetEraUnbondLimitResponse);
  rpc SetChainBondingDuration(MsgSetChainBondingDuration) returns (MsgSetChainBondingDurationResponse);
  rpc SetPoolDetail(MsgSetPoolDetail) returns (MsgSetPoolDetailResponse);
  rpc SetLeastBond(MsgSetLeastBond) returns (MsgSetLeastBondResponse);
  rpc ClearCurrentEraSnapShots(MsgClearCurrentEraSnapShots) returns (MsgClearCurrentEraSnapShotsResponse);
  rpc SetStakingRewardCommission(MsgSetStakingRewardCommission) returns (MsgSetStakingRewardCommissionResponse);
  rpc SetProtocolFeeReceiver(MsgSetProtocolFeeReceiver) returns (MsgSetProtocolFeeReceiverResponse);
  rpc SetUnbondRelayFee(MsgSetUnbondRelayFee) returns (MsgSetUnbondRelayFeeResponse);
  rpc LiquidityUnbond(MsgLiquidityUnbond) returns (MsgLiquidityUnbondResponse);
  rpc SetUnbondCommission(MsgSetUnbondCommission) returns (MsgSetUnbondCommissionResponse);
  rpc SubmitSignature(MsgSubmitSignature) returns (MsgSubmitSignatureResponse);
  rpc SetRParams(MsgSetRParams) returns (MsgSetRParamsResponse);
  rpc Onboard(MsgOnboard) returns (MsgOnboardResponse);
  rpc SetRValidatorIndicator(MsgSetRValidatorIndicator) returns (MsgSetRValidatorIndicatorResponse);
  rpc SetRelayFeeReceiver(MsgSetRelayFeeReceiver) returns (MsgSetRelayFeeReceiverResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgSetEraUnbondLimit {
  string creator = 1;
  string denom = 2;
  uint32 limit = 3;
}

message MsgSetEraUnbondLimitResponse {
}

message MsgSetChainBondingDuration {
  string creator = 1;
  string denom = 2;
  uint32 era = 3;
}

message MsgSetChainBondingDurationResponse {
}

message MsgSetPoolDetail {
  string creator = 1;
  string denom = 2;
  string pool = 3;
  repeated string subAccounts = 4;
  uint32 threshold = 5;
}

message MsgSetPoolDetailResponse {
}

message MsgSetLeastBond {
  string creator = 1;
  string denom = 2;
  string amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MsgSetLeastBondResponse {
}

message MsgClearCurrentEraSnapShots {
  string creator = 1;
  string denom = 2;
}

message MsgClearCurrentEraSnapShotsResponse {
}

message MsgSetStakingRewardCommission {
  string creator = 1;
  string denom = 2;
  string commission = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

message MsgSetStakingRewardCommissionResponse {
}

message MsgSetProtocolFeeReceiver {
  string creator = 1;
  string receiver = 2;
}

message MsgSetProtocolFeeReceiverResponse {
}

message MsgSetUnbondRelayFee {
  string creator = 1;
  string denom = 2;
  string value = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
}

message MsgSetUnbondRelayFeeResponse {
}

message MsgLiquidityUnbond {
  string creator = 1;
  string pool = 2;
  string value = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
  string recipient = 4;
}

message MsgLiquidityUnbondResponse {
}

message MsgSetUnbondCommission {
  string creator = 1;
  string denom = 2;
  string commission = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

message MsgSetUnbondCommissionResponse {
}

message MsgSubmitSignature {
  string creator = 1;
  string denom = 2;
  uint32 era = 3;
  string pool = 4;
  OriginalTxType txType = 5;
  string propId = 6;
  string signature = 7;
}

message MsgSubmitSignatureResponse {
}

message MsgSetRParams {
  string creator = 1;
  string denom = 2;
  string gasPrice = 3;
  string eraSeconds = 4;
  string leastBond = 5;
  repeated string validators = 6;
}

message MsgSetRParamsResponse {
}

message MsgOnboard {
  string creator = 1;
  string denom = 2;
  string address = 3;
  string operatorAddress = 4;
  string locked = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
}

message MsgOnboardResponse {
}

message MsgSetRValidatorIndicator {
  string creator = 1;
  string denom = 2;
  string commission = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  uint32 uptime = 4;
  int64 votingPower = 5;
  string locked = 6 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Coin", (gogoproto.nullable) = false];
}

message MsgSetRValidatorIndicatorResponse {
}

message MsgSetRelayFeeReceiver {
  string creator = 1;
  string denom = 2;
  string receiver = 3;
}

message MsgSetRelayFeeReceiverResponse {
}

// this line is used by starport scaffolding # proto/tx/message