syntax = "proto3";
package stafihub.stafihub.bridge;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "bridge/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/stafihub/stafihub/x/bridge/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/stafihub/stafihub/bridge/params";
  }
  // Queries a list of Relayers items.
	rpc Relayers(QueryRelayersRequest) returns (QueryRelayersResponse) {
		option (google.api.http).get = "/stafihub/stafihub/bridge/relayers";
	}

// Queries a list of Threshold items.
	rpc Threshold(QueryThresholdRequest) returns (QueryThresholdResponse) {
		option (google.api.http).get = "/stafihub/stafihub/bridge/threshold";
	}

// Queries a list of ChaindIds items.
	rpc ChaindIds(QueryChaindIdsRequest) returns (QueryChaindIdsResponse) {
		option (google.api.http).get = "/stafihub/stafihub/bridge/chaind_ids";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryRelayersRequest {
}

message QueryRelayersResponse {
  repeated string addressList = 1;
}

message QueryThresholdRequest {
}

message QueryThresholdResponse {
  string threshold = 1;
}

message QueryChaindIdsRequest {
}

message QueryChaindIdsResponse {
  repeated string chainId = 1;
}

// this line is used by starport scaffolding # 3
