// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rvalidator/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgSetRValidatorIndicator struct {
	Creator    string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom      string                                  `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Commission github_com_cosmos_cosmos_sdk_types.Dec  `protobuf:"bytes,3,opt,name=commission,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"commission"`
	Uptime     uint32                                  `protobuf:"varint,4,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Locked     github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,5,opt,name=locked,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"locked"`
}

func (m *MsgSetRValidatorIndicator) Reset()         { *m = MsgSetRValidatorIndicator{} }
func (m *MsgSetRValidatorIndicator) String() string { return proto.CompactTextString(m) }
func (*MsgSetRValidatorIndicator) ProtoMessage()    {}
func (*MsgSetRValidatorIndicator) Descriptor() ([]byte, []int) {
	return fileDescriptor_27b98f1fac7fb431, []int{0}
}
func (m *MsgSetRValidatorIndicator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetRValidatorIndicator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetRValidatorIndicator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetRValidatorIndicator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetRValidatorIndicator.Merge(m, src)
}
func (m *MsgSetRValidatorIndicator) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetRValidatorIndicator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetRValidatorIndicator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetRValidatorIndicator proto.InternalMessageInfo

func (m *MsgSetRValidatorIndicator) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetRValidatorIndicator) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgSetRValidatorIndicator) GetUptime() uint32 {
	if m != nil {
		return m.Uptime
	}
	return 0
}

type MsgSetRValidatorIndicatorResponse struct {
}

func (m *MsgSetRValidatorIndicatorResponse) Reset()         { *m = MsgSetRValidatorIndicatorResponse{} }
func (m *MsgSetRValidatorIndicatorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetRValidatorIndicatorResponse) ProtoMessage()    {}
func (*MsgSetRValidatorIndicatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27b98f1fac7fb431, []int{1}
}
func (m *MsgSetRValidatorIndicatorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetRValidatorIndicatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetRValidatorIndicatorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetRValidatorIndicatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetRValidatorIndicatorResponse.Merge(m, src)
}
func (m *MsgSetRValidatorIndicatorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetRValidatorIndicatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetRValidatorIndicatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetRValidatorIndicatorResponse proto.InternalMessageInfo

type MsgOnboard struct {
	Creator string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Denom   string                                  `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty"`
	Address string                                  `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Locked  github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,4,opt,name=locked,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"locked"`
}

func (m *MsgOnboard) Reset()         { *m = MsgOnboard{} }
func (m *MsgOnboard) String() string { return proto.CompactTextString(m) }
func (*MsgOnboard) ProtoMessage()    {}
func (*MsgOnboard) Descriptor() ([]byte, []int) {
	return fileDescriptor_27b98f1fac7fb431, []int{2}
}
func (m *MsgOnboard) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOnboard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOnboard.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOnboard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOnboard.Merge(m, src)
}
func (m *MsgOnboard) XXX_Size() int {
	return m.Size()
}
func (m *MsgOnboard) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOnboard.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOnboard proto.InternalMessageInfo

func (m *MsgOnboard) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgOnboard) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgOnboard) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgOnboardResponse struct {
}

func (m *MsgOnboardResponse) Reset()         { *m = MsgOnboardResponse{} }
func (m *MsgOnboardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgOnboardResponse) ProtoMessage()    {}
func (*MsgOnboardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27b98f1fac7fb431, []int{3}
}
func (m *MsgOnboardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgOnboardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgOnboardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgOnboardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgOnboardResponse.Merge(m, src)
}
func (m *MsgOnboardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgOnboardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgOnboardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgOnboardResponse proto.InternalMessageInfo

type MsgVoteStatusProposal struct {
	Creator      string           `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ProposalId   uint64           `protobuf:"varint,2,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	Denom        string           `protobuf:"bytes,3,opt,name=denom,proto3" json:"denom,omitempty"`
	Addresses    []string         `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	SourceStatus RValidatorStatus `protobuf:"varint,5,opt,name=sourceStatus,proto3,enum=stafihub.stafihub.rvalidator.RValidatorStatus" json:"sourceStatus,omitempty"`
	DestStatus   RValidatorStatus `protobuf:"varint,6,opt,name=destStatus,proto3,enum=stafihub.stafihub.rvalidator.RValidatorStatus" json:"destStatus,omitempty"`
}

func (m *MsgVoteStatusProposal) Reset()         { *m = MsgVoteStatusProposal{} }
func (m *MsgVoteStatusProposal) String() string { return proto.CompactTextString(m) }
func (*MsgVoteStatusProposal) ProtoMessage()    {}
func (*MsgVoteStatusProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_27b98f1fac7fb431, []int{4}
}
func (m *MsgVoteStatusProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteStatusProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteStatusProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteStatusProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteStatusProposal.Merge(m, src)
}
func (m *MsgVoteStatusProposal) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteStatusProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteStatusProposal.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteStatusProposal proto.InternalMessageInfo

func (m *MsgVoteStatusProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgVoteStatusProposal) GetProposalId() uint64 {
	if m != nil {
		return m.ProposalId
	}
	return 0
}

func (m *MsgVoteStatusProposal) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

func (m *MsgVoteStatusProposal) GetAddresses() []string {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *MsgVoteStatusProposal) GetSourceStatus() RValidatorStatus {
	if m != nil {
		return m.SourceStatus
	}
	return Onboard
}

func (m *MsgVoteStatusProposal) GetDestStatus() RValidatorStatus {
	if m != nil {
		return m.DestStatus
	}
	return Onboard
}

type MsgVoteStatusProposalResponse struct {
}

func (m *MsgVoteStatusProposalResponse) Reset()         { *m = MsgVoteStatusProposalResponse{} }
func (m *MsgVoteStatusProposalResponse) String() string { return proto.CompactTextString(m) }
func (*MsgVoteStatusProposalResponse) ProtoMessage()    {}
func (*MsgVoteStatusProposalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_27b98f1fac7fb431, []int{5}
}
func (m *MsgVoteStatusProposalResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgVoteStatusProposalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgVoteStatusProposalResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgVoteStatusProposalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgVoteStatusProposalResponse.Merge(m, src)
}
func (m *MsgVoteStatusProposalResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgVoteStatusProposalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgVoteStatusProposalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgVoteStatusProposalResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSetRValidatorIndicator)(nil), "stafihub.stafihub.rvalidator.MsgSetRValidatorIndicator")
	proto.RegisterType((*MsgSetRValidatorIndicatorResponse)(nil), "stafihub.stafihub.rvalidator.MsgSetRValidatorIndicatorResponse")
	proto.RegisterType((*MsgOnboard)(nil), "stafihub.stafihub.rvalidator.MsgOnboard")
	proto.RegisterType((*MsgOnboardResponse)(nil), "stafihub.stafihub.rvalidator.MsgOnboardResponse")
	proto.RegisterType((*MsgVoteStatusProposal)(nil), "stafihub.stafihub.rvalidator.MsgVoteStatusProposal")
	proto.RegisterType((*MsgVoteStatusProposalResponse)(nil), "stafihub.stafihub.rvalidator.MsgVoteStatusProposalResponse")
}

func init() { proto.RegisterFile("rvalidator/tx.proto", fileDescriptor_27b98f1fac7fb431) }

var fileDescriptor_27b98f1fac7fb431 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xbd, 0x8e, 0xd3, 0x40,
	0x10, 0xce, 0x5e, 0x7c, 0x89, 0x32, 0xfc, 0x14, 0x4b, 0x38, 0x19, 0x03, 0x4e, 0x30, 0x12, 0xa4,
	0xc1, 0x46, 0x77, 0x05, 0x05, 0x05, 0x52, 0x40, 0x42, 0x29, 0x02, 0x68, 0x4f, 0xba, 0x82, 0x06,
	0x39, 0xde, 0xc5, 0x58, 0x17, 0x7b, 0x2d, 0xcf, 0x06, 0x1d, 0x2f, 0x40, 0x41, 0x85, 0x78, 0x01,
	0x5e, 0x81, 0xc7, 0xb8, 0xf2, 0x4a, 0x44, 0x71, 0x42, 0xc9, 0x6b, 0x50, 0x20, 0xff, 0xc5, 0x46,
	0x5c, 0x72, 0x47, 0xa8, 0x3c, 0xb3, 0x3b, 0xf3, 0xcd, 0xf7, 0x8d, 0x67, 0x16, 0xae, 0x25, 0xef,
	0xdd, 0x69, 0xc0, 0x5d, 0x25, 0x13, 0x47, 0x1d, 0xd9, 0x71, 0x22, 0x95, 0xa4, 0xb7, 0x50, 0xb9,
	0x6f, 0x83, 0x77, 0xb3, 0x89, 0xbd, 0x34, 0xaa, 0x30, 0xa3, 0xeb, 0x4b, 0x5f, 0x66, 0x81, 0x4e,
	0x6a, 0xe5, 0x39, 0xc6, 0xcd, 0x1a, 0x50, 0x65, 0xe6, 0x97, 0xd6, 0x2f, 0x02, 0x37, 0xc6, 0xe8,
	0xef, 0x0b, 0xc5, 0x0e, 0xca, 0xab, 0x51, 0xc4, 0x03, 0x2f, 0x35, 0xa8, 0x0e, 0x6d, 0x2f, 0x11,
	0xa9, 0xa9, 0x93, 0x3e, 0x19, 0x74, 0x58, 0xe9, 0xd2, 0x2e, 0x6c, 0x73, 0x11, 0xc9, 0x50, 0xdf,
	0xca, 0xce, 0x73, 0x87, 0xbe, 0x00, 0xf0, 0x64, 0x18, 0x06, 0x88, 0x81, 0x8c, 0xf4, 0x66, 0x7a,
	0x35, 0xb4, 0x8f, 0x4f, 0x7b, 0x8d, 0x1f, 0xa7, 0xbd, 0x7b, 0x7e, 0xa0, 0x52, 0xbe, 0x9e, 0x0c,
	0x1d, 0x4f, 0x62, 0x28, 0xb1, 0xf8, 0x3c, 0x40, 0x7e, 0xe8, 0xa8, 0x0f, 0xb1, 0x40, 0xfb, 0x99,
	0xf0, 0x58, 0x0d, 0x81, 0xee, 0x40, 0x6b, 0x16, 0xab, 0x20, 0x14, 0xba, 0xd6, 0x27, 0x83, 0x2b,
	0xac, 0xf0, 0xe8, 0x73, 0x68, 0x4d, 0xa5, 0x77, 0x28, 0xb8, 0xbe, 0x9d, 0xd5, 0x70, 0x8a, 0x1a,
	0xf7, 0x2f, 0x50, 0xe3, 0xa9, 0x0c, 0x22, 0x56, 0xa4, 0x5b, 0x77, 0xe1, 0xce, 0x4a, 0xf5, 0x4c,
	0x60, 0x2c, 0x23, 0x14, 0xd6, 0x57, 0x02, 0x30, 0x46, 0xff, 0x65, 0x34, 0x91, 0x6e, 0xc2, 0xff,
	0xb9, 0x29, 0x3a, 0xb4, 0x5d, 0xce, 0x13, 0x81, 0x98, 0x77, 0x84, 0x95, 0x6e, 0x4d, 0x86, 0xf6,
	0x7f, 0x32, 0xba, 0x40, 0x2b, 0x82, 0x4b, 0xde, 0xdf, 0xb6, 0xe0, 0xfa, 0x18, 0xfd, 0x03, 0xa9,
	0xc4, 0xbe, 0x72, 0xd5, 0x0c, 0x5f, 0x25, 0x32, 0x96, 0xe8, 0x4e, 0xd7, 0x48, 0xe8, 0xc1, 0xa5,
	0xb8, 0x88, 0x7a, 0x13, 0xf0, 0x4c, 0x88, 0xc6, 0xa0, 0x3c, 0x1a, 0xf1, 0x4a, 0x63, 0xb3, 0xae,
	0xd1, 0x82, 0x4e, 0x21, 0x4a, 0xa0, 0xae, 0xf5, 0x9b, 0x83, 0xce, 0x50, 0x4b, 0xc5, 0xb0, 0xea,
	0x98, 0x32, 0xb8, 0x8c, 0x72, 0x96, 0x78, 0x05, 0x99, 0xec, 0xd7, 0x5d, 0xdd, 0xb5, 0xed, 0x75,
	0x23, 0x6d, 0x57, 0xff, 0x25, 0xcf, 0x62, 0x7f, 0x60, 0xa4, 0x03, 0xc7, 0x05, 0xaa, 0x02, 0xb1,
	0xb5, 0x11, 0x62, 0x0d, 0xc1, 0xea, 0xc1, 0xed, 0x33, 0x3b, 0x56, 0xf6, 0x74, 0xf7, 0x53, 0x13,
	0x9a, 0x63, 0xf4, 0xe9, 0x17, 0x02, 0x3b, 0x2b, 0x96, 0xe6, 0xd1, 0xfa, 0xfa, 0x2b, 0xe7, 0xcd,
	0x78, 0xb2, 0x61, 0x62, 0x49, 0x8e, 0x0a, 0x68, 0x97, 0x43, 0x3a, 0x38, 0x17, 0xab, 0x88, 0x34,
	0x1e, 0x5e, 0x34, 0x72, 0x59, 0xe6, 0x23, 0x01, 0x7a, 0xc6, 0x50, 0xed, 0x9d, 0x0b, 0xf4, 0x77,
	0x92, 0xf1, 0x78, 0x83, 0xa4, 0x92, 0xc8, 0x70, 0x74, 0x3c, 0x37, 0xc9, 0xc9, 0xdc, 0x24, 0x3f,
	0xe7, 0x26, 0xf9, 0xbc, 0x30, 0x1b, 0x27, 0x0b, 0xb3, 0xf1, 0x7d, 0x61, 0x36, 0x5e, 0x3b, 0xb5,
	0x0d, 0x2a, 0x71, 0x2b, 0xe3, 0xc8, 0xa9, 0xbf, 0xad, 0xe9, 0x3a, 0x4d, 0x5a, 0xd9, 0x73, 0xb8,
	0xf7, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xff, 0x42, 0x81, 0x1b, 0x76, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	SetRValidatorIndicator(ctx context.Context, in *MsgSetRValidatorIndicator, opts ...grpc.CallOption) (*MsgSetRValidatorIndicatorResponse, error)
	Onboard(ctx context.Context, in *MsgOnboard, opts ...grpc.CallOption) (*MsgOnboardResponse, error)
	VoteStatusProposal(ctx context.Context, in *MsgVoteStatusProposal, opts ...grpc.CallOption) (*MsgVoteStatusProposalResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SetRValidatorIndicator(ctx context.Context, in *MsgSetRValidatorIndicator, opts ...grpc.CallOption) (*MsgSetRValidatorIndicatorResponse, error) {
	out := new(MsgSetRValidatorIndicatorResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.rvalidator.Msg/SetRValidatorIndicator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Onboard(ctx context.Context, in *MsgOnboard, opts ...grpc.CallOption) (*MsgOnboardResponse, error) {
	out := new(MsgOnboardResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.rvalidator.Msg/Onboard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) VoteStatusProposal(ctx context.Context, in *MsgVoteStatusProposal, opts ...grpc.CallOption) (*MsgVoteStatusProposalResponse, error) {
	out := new(MsgVoteStatusProposalResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.rvalidator.Msg/VoteStatusProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	SetRValidatorIndicator(context.Context, *MsgSetRValidatorIndicator) (*MsgSetRValidatorIndicatorResponse, error)
	Onboard(context.Context, *MsgOnboard) (*MsgOnboardResponse, error)
	VoteStatusProposal(context.Context, *MsgVoteStatusProposal) (*MsgVoteStatusProposalResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SetRValidatorIndicator(ctx context.Context, req *MsgSetRValidatorIndicator) (*MsgSetRValidatorIndicatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRValidatorIndicator not implemented")
}
func (*UnimplementedMsgServer) Onboard(ctx context.Context, req *MsgOnboard) (*MsgOnboardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Onboard not implemented")
}
func (*UnimplementedMsgServer) VoteStatusProposal(ctx context.Context, req *MsgVoteStatusProposal) (*MsgVoteStatusProposalResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoteStatusProposal not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SetRValidatorIndicator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetRValidatorIndicator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetRValidatorIndicator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.rvalidator.Msg/SetRValidatorIndicator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetRValidatorIndicator(ctx, req.(*MsgSetRValidatorIndicator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Onboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgOnboard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Onboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.rvalidator.Msg/Onboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Onboard(ctx, req.(*MsgOnboard))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_VoteStatusProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgVoteStatusProposal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).VoteStatusProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.rvalidator.Msg/VoteStatusProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).VoteStatusProposal(ctx, req.(*MsgVoteStatusProposal))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stafihub.stafihub.rvalidator.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetRValidatorIndicator",
			Handler:    _Msg_SetRValidatorIndicator_Handler,
		},
		{
			MethodName: "Onboard",
			Handler:    _Msg_Onboard_Handler,
		},
		{
			MethodName: "VoteStatusProposal",
			Handler:    _Msg_VoteStatusProposal_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rvalidator/tx.proto",
}

func (m *MsgSetRValidatorIndicator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetRValidatorIndicator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetRValidatorIndicator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Locked.Size()
		i -= size
		if _, err := m.Locked.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if m.Uptime != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Uptime))
		i--
		dAtA[i] = 0x20
	}
	{
		size := m.Commission.Size()
		i -= size
		if _, err := m.Commission.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetRValidatorIndicatorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetRValidatorIndicatorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetRValidatorIndicatorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgOnboard) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOnboard) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOnboard) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Locked.Size()
		i -= size
		if _, err := m.Locked.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgOnboardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgOnboardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgOnboardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgVoteStatusProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteStatusProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteStatusProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DestStatus != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DestStatus))
		i--
		dAtA[i] = 0x30
	}
	if m.SourceStatus != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.SourceStatus))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Addresses) > 0 {
		for iNdEx := len(m.Addresses) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Addresses[iNdEx])
			copy(dAtA[i:], m.Addresses[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Addresses[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ProposalId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ProposalId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgVoteStatusProposalResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgVoteStatusProposalResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgVoteStatusProposalResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSetRValidatorIndicator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Commission.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.Uptime != 0 {
		n += 1 + sovTx(uint64(m.Uptime))
	}
	l = m.Locked.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetRValidatorIndicatorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgOnboard) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Locked.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgOnboardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgVoteStatusProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ProposalId != 0 {
		n += 1 + sovTx(uint64(m.ProposalId))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Addresses) > 0 {
		for _, s := range m.Addresses {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.SourceStatus != 0 {
		n += 1 + sovTx(uint64(m.SourceStatus))
	}
	if m.DestStatus != 0 {
		n += 1 + sovTx(uint64(m.DestStatus))
	}
	return n
}

func (m *MsgVoteStatusProposalResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSetRValidatorIndicator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetRValidatorIndicator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetRValidatorIndicator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commission", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Commission.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uptime", wireType)
			}
			m.Uptime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uptime |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Locked", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Locked.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetRValidatorIndicatorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetRValidatorIndicatorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetRValidatorIndicatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOnboard) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOnboard: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOnboard: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Locked", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Locked.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgOnboardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgOnboardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgOnboardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteStatusProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteStatusProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteStatusProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposalId", wireType)
			}
			m.ProposalId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProposalId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addresses", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addresses = append(m.Addresses, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SourceStatus", wireType)
			}
			m.SourceStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SourceStatus |= RValidatorStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestStatus", wireType)
			}
			m.DestStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DestStatus |= RValidatorStatus(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgVoteStatusProposalResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgVoteStatusProposalResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgVoteStatusProposalResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
