// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rstaking/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgSetInflationBase struct {
	Creator       string                                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	InflationBase github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,2,opt,name=inflationBase,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"inflationBase"`
}

func (m *MsgSetInflationBase) Reset()         { *m = MsgSetInflationBase{} }
func (m *MsgSetInflationBase) String() string { return proto.CompactTextString(m) }
func (*MsgSetInflationBase) ProtoMessage()    {}
func (*MsgSetInflationBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc4bfb0e643e29ba, []int{0}
}
func (m *MsgSetInflationBase) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetInflationBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetInflationBase.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetInflationBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetInflationBase.Merge(m, src)
}
func (m *MsgSetInflationBase) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetInflationBase) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetInflationBase.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetInflationBase proto.InternalMessageInfo

func (m *MsgSetInflationBase) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgSetInflationBaseResponse struct {
}

func (m *MsgSetInflationBaseResponse) Reset()         { *m = MsgSetInflationBaseResponse{} }
func (m *MsgSetInflationBaseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetInflationBaseResponse) ProtoMessage()    {}
func (*MsgSetInflationBaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc4bfb0e643e29ba, []int{1}
}
func (m *MsgSetInflationBaseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetInflationBaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetInflationBaseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetInflationBaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetInflationBaseResponse.Merge(m, src)
}
func (m *MsgSetInflationBaseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetInflationBaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetInflationBaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetInflationBaseResponse proto.InternalMessageInfo

type MsgAddValToWhitelist struct {
	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ValAddress string `protobuf:"bytes,2,opt,name=valAddress,proto3" json:"valAddress,omitempty"`
}

func (m *MsgAddValToWhitelist) Reset()         { *m = MsgAddValToWhitelist{} }
func (m *MsgAddValToWhitelist) String() string { return proto.CompactTextString(m) }
func (*MsgAddValToWhitelist) ProtoMessage()    {}
func (*MsgAddValToWhitelist) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc4bfb0e643e29ba, []int{2}
}
func (m *MsgAddValToWhitelist) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddValToWhitelist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddValToWhitelist.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddValToWhitelist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddValToWhitelist.Merge(m, src)
}
func (m *MsgAddValToWhitelist) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddValToWhitelist) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddValToWhitelist.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddValToWhitelist proto.InternalMessageInfo

func (m *MsgAddValToWhitelist) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddValToWhitelist) GetValAddress() string {
	if m != nil {
		return m.ValAddress
	}
	return ""
}

type MsgAddValToWhitelistResponse struct {
}

func (m *MsgAddValToWhitelistResponse) Reset()         { *m = MsgAddValToWhitelistResponse{} }
func (m *MsgAddValToWhitelistResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddValToWhitelistResponse) ProtoMessage()    {}
func (*MsgAddValToWhitelistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc4bfb0e643e29ba, []int{3}
}
func (m *MsgAddValToWhitelistResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddValToWhitelistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddValToWhitelistResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddValToWhitelistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddValToWhitelistResponse.Merge(m, src)
}
func (m *MsgAddValToWhitelistResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddValToWhitelistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddValToWhitelistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddValToWhitelistResponse proto.InternalMessageInfo

type MsgToggleWhitelistSwitch struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgToggleWhitelistSwitch) Reset()         { *m = MsgToggleWhitelistSwitch{} }
func (m *MsgToggleWhitelistSwitch) String() string { return proto.CompactTextString(m) }
func (*MsgToggleWhitelistSwitch) ProtoMessage()    {}
func (*MsgToggleWhitelistSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc4bfb0e643e29ba, []int{4}
}
func (m *MsgToggleWhitelistSwitch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleWhitelistSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleWhitelistSwitch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleWhitelistSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleWhitelistSwitch.Merge(m, src)
}
func (m *MsgToggleWhitelistSwitch) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleWhitelistSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleWhitelistSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleWhitelistSwitch proto.InternalMessageInfo

func (m *MsgToggleWhitelistSwitch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgToggleWhitelistSwitchResponse struct {
}

func (m *MsgToggleWhitelistSwitchResponse) Reset()         { *m = MsgToggleWhitelistSwitchResponse{} }
func (m *MsgToggleWhitelistSwitchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgToggleWhitelistSwitchResponse) ProtoMessage()    {}
func (*MsgToggleWhitelistSwitchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc4bfb0e643e29ba, []int{5}
}
func (m *MsgToggleWhitelistSwitchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleWhitelistSwitchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleWhitelistSwitchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleWhitelistSwitchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleWhitelistSwitchResponse.Merge(m, src)
}
func (m *MsgToggleWhitelistSwitchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleWhitelistSwitchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleWhitelistSwitchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleWhitelistSwitchResponse proto.InternalMessageInfo

type MsgWithdraw struct {
	Creator   string                                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Amount    github_com_cosmos_cosmos_sdk_types.Coin `protobuf:"bytes,2,opt,name=amount,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Coin" json:"amount"`
	Recipient string                                  `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
}

func (m *MsgWithdraw) Reset()         { *m = MsgWithdraw{} }
func (m *MsgWithdraw) String() string { return proto.CompactTextString(m) }
func (*MsgWithdraw) ProtoMessage()    {}
func (*MsgWithdraw) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc4bfb0e643e29ba, []int{6}
}
func (m *MsgWithdraw) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdraw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdraw.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdraw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdraw.Merge(m, src)
}
func (m *MsgWithdraw) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdraw) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdraw.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdraw proto.InternalMessageInfo

func (m *MsgWithdraw) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgWithdraw) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

type MsgWithdrawResponse struct {
}

func (m *MsgWithdrawResponse) Reset()         { *m = MsgWithdrawResponse{} }
func (m *MsgWithdrawResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawResponse) ProtoMessage()    {}
func (*MsgWithdrawResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dc4bfb0e643e29ba, []int{7}
}
func (m *MsgWithdrawResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawResponse.Merge(m, src)
}
func (m *MsgWithdrawResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSetInflationBase)(nil), "stafihub.stafihub.rstaking.MsgSetInflationBase")
	proto.RegisterType((*MsgSetInflationBaseResponse)(nil), "stafihub.stafihub.rstaking.MsgSetInflationBaseResponse")
	proto.RegisterType((*MsgAddValToWhitelist)(nil), "stafihub.stafihub.rstaking.MsgAddValToWhitelist")
	proto.RegisterType((*MsgAddValToWhitelistResponse)(nil), "stafihub.stafihub.rstaking.MsgAddValToWhitelistResponse")
	proto.RegisterType((*MsgToggleWhitelistSwitch)(nil), "stafihub.stafihub.rstaking.MsgToggleWhitelistSwitch")
	proto.RegisterType((*MsgToggleWhitelistSwitchResponse)(nil), "stafihub.stafihub.rstaking.MsgToggleWhitelistSwitchResponse")
	proto.RegisterType((*MsgWithdraw)(nil), "stafihub.stafihub.rstaking.MsgWithdraw")
	proto.RegisterType((*MsgWithdrawResponse)(nil), "stafihub.stafihub.rstaking.MsgWithdrawResponse")
}

func init() { proto.RegisterFile("rstaking/tx.proto", fileDescriptor_dc4bfb0e643e29ba) }

var fileDescriptor_dc4bfb0e643e29ba = []byte{
	// 464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4f, 0x6b, 0xd4, 0x40,
	0x14, 0xdf, 0xb8, 0x50, 0xed, 0x13, 0xc1, 0xc6, 0x16, 0x42, 0xac, 0x69, 0xc9, 0xc1, 0x7a, 0x69,
	0x46, 0xb4, 0xa0, 0x07, 0x2f, 0x5d, 0x0f, 0xa5, 0x87, 0x80, 0xa4, 0x8b, 0x05, 0x6f, 0xd3, 0x64,
	0x3a, 0x3b, 0x34, 0x3b, 0xb3, 0xe4, 0xbd, 0xda, 0x0a, 0x82, 0x27, 0x4f, 0x82, 0xf8, 0xb1, 0x7a,
	0xec, 0x51, 0x3c, 0x14, 0xd9, 0xfd, 0x12, 0x1e, 0x65, 0xb7, 0x99, 0xec, 0xca, 0x66, 0xbb, 0x5d,
	0x4f, 0x79, 0x99, 0x79, 0xbf, 0x3f, 0xf3, 0xe6, 0xc7, 0xc0, 0x4a, 0x81, 0xc4, 0x4f, 0x94, 0x96,
	0x8c, 0xce, 0xa3, 0x5e, 0x61, 0xc8, 0xb8, 0x3e, 0x12, 0x3f, 0x56, 0x9d, 0xd3, 0xa3, 0xa8, 0x2a,
	0x6c, 0x93, 0xbf, 0x2a, 0x8d, 0x34, 0xa3, 0x36, 0x36, 0xac, 0xae, 0x11, 0xe1, 0x57, 0x07, 0x1e,
	0xc5, 0x28, 0x0f, 0x04, 0xed, 0xeb, 0xe3, 0x9c, 0x93, 0x32, 0xba, 0xc5, 0x51, 0xb8, 0x1e, 0xdc,
	0x4d, 0x0b, 0xc1, 0xc9, 0x14, 0x9e, 0xb3, 0xe9, 0x3c, 0x5b, 0x4e, 0xec, 0xaf, 0xdb, 0x86, 0x07,
	0x6a, 0xb2, 0xd5, 0xbb, 0x33, 0xdc, 0x6f, 0x45, 0x17, 0x57, 0x1b, 0x8d, 0x5f, 0x57, 0x1b, 0x4f,
	0xa5, 0xa2, 0xa1, 0x6e, 0x6a, 0xba, 0x2c, 0x35, 0xd8, 0x35, 0x58, 0x7e, 0xb6, 0x31, 0x3b, 0x61,
	0xf4, 0xa9, 0x27, 0x30, 0xda, 0xd7, 0x94, 0xfc, 0x4b, 0x12, 0x3e, 0x81, 0xc7, 0x35, 0x36, 0x12,
	0x81, 0x3d, 0xa3, 0x51, 0x84, 0xef, 0x60, 0x35, 0x46, 0xb9, 0x9b, 0x65, 0xef, 0x79, 0xde, 0x36,
	0x87, 0x1d, 0x45, 0x22, 0x57, 0x48, 0x37, 0xd8, 0x0c, 0x00, 0x3e, 0xf2, 0x7c, 0x37, 0xcb, 0x0a,
	0x81, 0x78, 0xed, 0x31, 0x99, 0x58, 0x09, 0x03, 0x58, 0xaf, 0x63, 0xac, 0x14, 0x77, 0xc0, 0x8b,
	0x51, 0xb6, 0x8d, 0x94, 0xb9, 0xa8, 0x76, 0x0f, 0xce, 0x14, 0xa5, 0x9d, 0xd9, 0xaa, 0x61, 0x08,
	0x9b, 0xb3, 0x50, 0x15, 0xf3, 0x77, 0x07, 0xee, 0xc7, 0x28, 0x0f, 0x15, 0x75, 0xb2, 0x82, 0x9f,
	0xdd, 0x70, 0x86, 0x3d, 0x58, 0xe2, 0x5d, 0x73, 0xaa, 0xa9, 0x9c, 0x31, 0x2b, 0x67, 0xbc, 0x75,
	0x8b, 0x19, 0xbf, 0x35, 0x4a, 0x27, 0x25, 0xdc, 0x5d, 0x87, 0xe5, 0x42, 0xa4, 0xaa, 0xa7, 0x84,
	0x26, 0xaf, 0x39, 0x12, 0x19, 0x2f, 0x84, 0x6b, 0xa3, 0x08, 0x58, 0x3f, 0xd6, 0xe7, 0x8b, 0x3f,
	0x4d, 0x68, 0xc6, 0x28, 0xdd, 0xcf, 0xf0, 0x70, 0x2a, 0x1e, 0x2c, 0x9a, 0x9d, 0xb4, 0xa8, 0xe6,
	0x22, 0xfd, 0x57, 0x0b, 0x02, 0xac, 0x0b, 0xf7, 0x0b, 0xac, 0x4c, 0x5f, 0xfb, 0xf3, 0x39, 0x6c,
	0x53, 0x08, 0xff, 0xf5, 0xa2, 0x88, 0xca, 0xc0, 0x37, 0x07, 0xd6, 0xea, 0x63, 0xb0, 0x33, 0x87,
	0xb3, 0x16, 0xe5, 0xbf, 0xf9, 0x1f, 0x54, 0xe5, 0x26, 0x83, 0x7b, 0x55, 0x70, 0xb6, 0xe6, 0x30,
	0xd9, 0x46, 0x9f, 0xdd, 0xb2, 0xd1, 0xaa, 0xb4, 0xf6, 0x2e, 0xfa, 0x81, 0x73, 0xd9, 0x0f, 0x9c,
	0xdf, 0xfd, 0xc0, 0xf9, 0x31, 0x08, 0x1a, 0x97, 0x83, 0xa0, 0xf1, 0x73, 0x10, 0x34, 0x3e, 0x6c,
	0x4f, 0x44, 0xcf, 0x72, 0x8d, 0x8b, 0x73, 0x36, 0x7e, 0x93, 0x86, 0x29, 0x3c, 0x5a, 0x1a, 0xbd,
	0x32, 0x2f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x8a, 0xe5, 0x24, 0xac, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	SetInflationBase(ctx context.Context, in *MsgSetInflationBase, opts ...grpc.CallOption) (*MsgSetInflationBaseResponse, error)
	AddValToWhitelist(ctx context.Context, in *MsgAddValToWhitelist, opts ...grpc.CallOption) (*MsgAddValToWhitelistResponse, error)
	ToggleWhitelistSwitch(ctx context.Context, in *MsgToggleWhitelistSwitch, opts ...grpc.CallOption) (*MsgToggleWhitelistSwitchResponse, error)
	Withdraw(ctx context.Context, in *MsgWithdraw, opts ...grpc.CallOption) (*MsgWithdrawResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SetInflationBase(ctx context.Context, in *MsgSetInflationBase, opts ...grpc.CallOption) (*MsgSetInflationBaseResponse, error) {
	out := new(MsgSetInflationBaseResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.rstaking.Msg/SetInflationBase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddValToWhitelist(ctx context.Context, in *MsgAddValToWhitelist, opts ...grpc.CallOption) (*MsgAddValToWhitelistResponse, error) {
	out := new(MsgAddValToWhitelistResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.rstaking.Msg/AddValToWhitelist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ToggleWhitelistSwitch(ctx context.Context, in *MsgToggleWhitelistSwitch, opts ...grpc.CallOption) (*MsgToggleWhitelistSwitchResponse, error) {
	out := new(MsgToggleWhitelistSwitchResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.rstaking.Msg/ToggleWhitelistSwitch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Withdraw(ctx context.Context, in *MsgWithdraw, opts ...grpc.CallOption) (*MsgWithdrawResponse, error) {
	out := new(MsgWithdrawResponse)
	err := c.cc.Invoke(ctx, "/stafihub.stafihub.rstaking.Msg/Withdraw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	SetInflationBase(context.Context, *MsgSetInflationBase) (*MsgSetInflationBaseResponse, error)
	AddValToWhitelist(context.Context, *MsgAddValToWhitelist) (*MsgAddValToWhitelistResponse, error)
	ToggleWhitelistSwitch(context.Context, *MsgToggleWhitelistSwitch) (*MsgToggleWhitelistSwitchResponse, error)
	Withdraw(context.Context, *MsgWithdraw) (*MsgWithdrawResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SetInflationBase(ctx context.Context, req *MsgSetInflationBase) (*MsgSetInflationBaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetInflationBase not implemented")
}
func (*UnimplementedMsgServer) AddValToWhitelist(ctx context.Context, req *MsgAddValToWhitelist) (*MsgAddValToWhitelistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddValToWhitelist not implemented")
}
func (*UnimplementedMsgServer) ToggleWhitelistSwitch(ctx context.Context, req *MsgToggleWhitelistSwitch) (*MsgToggleWhitelistSwitchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleWhitelistSwitch not implemented")
}
func (*UnimplementedMsgServer) Withdraw(ctx context.Context, req *MsgWithdraw) (*MsgWithdrawResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Withdraw not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SetInflationBase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetInflationBase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetInflationBase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.rstaking.Msg/SetInflationBase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetInflationBase(ctx, req.(*MsgSetInflationBase))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddValToWhitelist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddValToWhitelist)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddValToWhitelist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.rstaking.Msg/AddValToWhitelist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddValToWhitelist(ctx, req.(*MsgAddValToWhitelist))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ToggleWhitelistSwitch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgToggleWhitelistSwitch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ToggleWhitelistSwitch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.rstaking.Msg/ToggleWhitelistSwitch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ToggleWhitelistSwitch(ctx, req.(*MsgToggleWhitelistSwitch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithdraw)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stafihub.stafihub.rstaking.Msg/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Withdraw(ctx, req.(*MsgWithdraw))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stafihub.stafihub.rstaking.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetInflationBase",
			Handler:    _Msg_SetInflationBase_Handler,
		},
		{
			MethodName: "AddValToWhitelist",
			Handler:    _Msg_AddValToWhitelist_Handler,
		},
		{
			MethodName: "ToggleWhitelistSwitch",
			Handler:    _Msg_ToggleWhitelistSwitch_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _Msg_Withdraw_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rstaking/tx.proto",
}

func (m *MsgSetInflationBase) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetInflationBase) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetInflationBase) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.InflationBase.Size()
		i -= size
		if _, err := m.InflationBase.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetInflationBaseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetInflationBaseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetInflationBaseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddValToWhitelist) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddValToWhitelist) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddValToWhitelist) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ValAddress) > 0 {
		i -= len(m.ValAddress)
		copy(dAtA[i:], m.ValAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ValAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddValToWhitelistResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddValToWhitelistResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddValToWhitelistResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgToggleWhitelistSwitch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleWhitelistSwitch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleWhitelistSwitch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgToggleWhitelistSwitchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleWhitelistSwitchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleWhitelistSwitchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWithdraw) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdraw) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdraw) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSetInflationBase) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.InflationBase.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetInflationBaseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddValToWhitelist) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ValAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddValToWhitelistResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgToggleWhitelistSwitch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgToggleWhitelistSwitchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWithdraw) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgWithdrawResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSetInflationBase) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetInflationBase: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetInflationBase: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InflationBase", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InflationBase.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetInflationBaseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetInflationBaseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetInflationBaseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddValToWhitelist) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddValToWhitelist: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddValToWhitelist: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ValAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ValAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddValToWhitelistResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddValToWhitelistResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddValToWhitelistResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleWhitelistSwitch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleWhitelistSwitch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleWhitelistSwitch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleWhitelistSwitchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleWhitelistSwitchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleWhitelistSwitchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdraw) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdraw: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdraw: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
